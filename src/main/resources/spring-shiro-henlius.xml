<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd" default-lazy-init="true">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--<property name="loginUrl" value="/login.html"/>-->
        <property name="successUrl" value="/login.html"/>
        <property name="unauthorizedUrl" value="/jsp/unauthorized.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                /css/**=anon
                /images/**=anon
                /js/**=anon
                /lib/**=anon
                /login.html**=anon
                /index.jsp**=anon
                /api/user/**=anon
                /page/**=jwt
                /api/**=jwt
                /hnust/**=jwt
            </value>
        </property>

        <!--<property name="filters">-->
            <!--<map>-->
                <!--<entry key="jwt" value-ref="jwtFilter" />-->
            <!--</map>-->
        <!--</property>-->


    </bean>

    <!--<bean id="jwtFilter" class="com.efangtec.common.shiro.JwtFilter"></bean>-->



    <!-- 配置进行授权和认证的 Realm -->
    <!--<bean id="adminDBRealm" class="com.efangtec.common.henlius.shiro.AdminDBRealm">-->
        <!--&lt;!&ndash;<property name="userInfoService" ref="userInfoServiceImpl"></property>&ndash;&gt;-->
    <!--</bean>-->

    <!--<bean id="userInfoDBRealm" class="com.efangtec.common.henlius.shiro.DocterDBRealm">-->
        <!--&lt;!&ndash;  <property name="userInfoService" ref="userInfoServiceImpl"></property>&ndash;&gt;-->
    <!--</bean>-->

    <!--<bean id="sellerDBRealm" class="com.efangtec.common.henlius.shiro.UserInfoDBRealm">-->
        <!--&lt;!&ndash;  <property name="userInfoService" ref="userInfoServiceImpl"></property>&ndash;&gt;-->
    <!--</bean>-->


    <!--安全管理器-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--&lt;!&ndash;设置自定义Realm&ndash;&gt;-->
        <!--&lt;!&ndash; <property name="realm" ref="myRealm"/>&ndash;&gt;-->
        <!--<property name="authenticator" ref="authenticator"></property>-->
        <!--<property name="realms">-->
            <!--<list>-->
                <!--<ref bean="adminDBRealm" />-->
                <!--&lt;!&ndash;<ref bean="sellerDBRealm"/>&ndash;&gt;-->
                <!--&lt;!&ndash;<ref bean="userInfoDBRealm"/>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->

        <!--&lt;!&ndash;将缓存管理器，交给安全管理器&ndash;&gt;-->
        <!--<property name="cacheManager" ref="shiroCacheManager"/>-->
        <!--&lt;!&ndash;<property name="cacheManager" ref="shiroEhcacheManager"/>&ndash;&gt;-->
        <!--&lt;!&ndash; session 管理器 &ndash;&gt;-->
        <!--<property name="sessionManager" ref="sessionManager"/>-->
        <!--&lt;!&ndash; cookie管理器 &ndash;&gt;-->

    <!--</bean>-->


    <!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
    <!--<bean id="authenticator" class="com.efangtec.common.shiro.CustomizedModularRealmAuthenticator">-->
        <!--&lt;!&ndash; 配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息 &ndash;&gt;-->
        <!--<property name="authenticationStrategy">-->
            <!--<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>-->
        <!--</property>-->
    <!--</bean>-->



    <!-- 会话管理器 -->
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
        <!--&lt;!&ndash; 设置超时时间1小时 &ndash;&gt;-->
        <!--<property name="globalSessionTimeout" value="3600000"/>-->
        <!--&lt;!&ndash;Shiro去掉URL上的JSESSIONID信息配置&ndash;&gt;-->
        <!--<property name="sessionIdUrlRewritingEnabled" value="false" />-->
        <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
        <!--<property name="sessionDAO" ref="shiroSessionDao"/>-->
        <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
        <!--&lt;!&ndash; 相隔多久检查一次session的有效性 &ndash;&gt;-->
        <!--&lt;!&ndash;<property name="sessionValidationInterval" value="100000"/>&ndash;&gt;-->

        <!--&lt;!&ndash;<property name="deleteInvalidSessions" value="true"/>&ndash;&gt;-->
    <!--</bean>-->


    <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--<constructor-arg value="brand"/>-->
        <!--&lt;!&ndash;<constructor-arg value="appid"/>&ndash;&gt;-->
        <!--<property name="domain" value=""/>-->
        <!--<property name="path" value="/"/>-->
        <!--<property name="httpOnly" value="true"/>-->
        <!--&lt;!&ndash;默认uid cookie 浏览器关闭后销毁&ndash;&gt;-->
        <!--<property name="maxAge" value="-1"/>-->
    <!--</bean>-->

    <!-- session存储的实现 -->
    <!--<bean id="shiroSessionDao"   class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"/>-->

    <!-- 单机session -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>


    <!-- 在方法中 注入  securityManager ，进行代理控制 -->
    <!--<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">-->
        <!--<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>-->
        <!--<property name="arguments" ref="securityManager"/>-->
    <!--</bean>-->

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <!--   <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"  depends-on="lifecycleBeanPostProcessor"/>-->

    <!-- 启用shrio授权注解拦截方式 -->
    <!--<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" >-->
        <!--<property name="securityManager" ref="securityManager"/>-->
    <!--</bean>-->

</beans>
